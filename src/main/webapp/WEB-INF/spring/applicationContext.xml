<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- holding properties for database connectivity / -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- enabling annotation driven configuration / -->
	<context:annotation-config />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- <property name="hibernate.hbm2ddl.auto">create-drop</property> -->
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaAdapter">
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="persistenceUnitName" value="tfgPU"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
	 			<prop key="hibernate.hbm2ddl.import_files">/tfg1415Inserts.sql</prop>
	 			<!-- Use JDBC batch API with a batch size of 100 -->
	 			<prop key="hibernate.jdbc.batch_size">100</prop>
	 			<prop key="hibernate.jdbc.use_getGeneratedKeys">false</prop>
	 			<!-- <prop key="hibernate.jdbc.fetch_size">100</prop>-->
			</props>
		</property>
	</bean>

	<bean id="jpaAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="${jpa.database}">
		<!-- p:showSql="${jpa.showSql}"> -->
	</bean>



	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="com.example.tfg.repository" />
	<context:component-scan base-package="com.example.tfg.service" />


 <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
     <constructor-arg value="256"/>
 </bean>


<!-- <security:global-method-security 
        mode="aspectj"
        secured-annotations="enabled"
        jsr250-annotations="disabled"
        pre-post-annotations="enabled"/> -->
</beans>
