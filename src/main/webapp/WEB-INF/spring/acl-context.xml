<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		 http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">


	<!-- Enables Method Security and Expression-based access control -->
	<security:global-method-security
		pre-post-annotations="enabled">
		<!-- Enables custom expression handler -->
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>

	<!-- See 15.3.2 Built-In Expression @http://static.springsource.org/spring-security/site/docs/3.0.x/reference/el-access.html#el-permission-evaluator -->
	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<!-- To use hasPermission() in expressions, configure a PermissionEvaluator -->
		<property name="permissionEvaluator" ref="permissionEvaluator" />
		<property name="roleHierarchy" ref="roleHierarchy" />
	</bean>

	<!-- Declare a custom PermissionEvaluator We'll rely on the standard AclPermissionEvaluator 
		implementation -->
	<!-- <bean class="com.example.tfg.domain.acl.BasePermission" id="permissionEvaluator"> 
		<constructor-arg ref="aclService" /> </bean> -->
	<bean class="org.springframework.security.acls.AclPermissionEvaluator"
		id="permissionEvaluator">
		<constructor-arg ref="aclService" />
	</bean>

	<!-- Declare an acl service -->
	<bean class="org.springframework.security.acls.jdbc.JdbcMutableAclService"
		id="aclService">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="lookupStrategy" />
		<constructor-arg ref="aclCache" />
		<property name="classIdentityQuery" value="SELECT @@IDENTITY" />
		<property name="sidIdentityQuery" value="SELECT @@IDENTITY" />
	</bean>

	<!-- Declare a lookup strategy -->
	<bean id="lookupStrategy"
		class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="aclCache" />
		<constructor-arg ref="aclAuthorizationStrategy" />
		<constructor-arg ref="auditLogger" />
	</bean>

	<!-- Declare an acl cache -->
	<bean id="aclCache"
		class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
		<constructor-arg>
			<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
				<property name="cacheManager">
					<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
				</property>
				<property name="cacheName" value="aclCache" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- Declare an acl authorization strategy -->
	<bean id="aclAuthorizationStrategy"
		class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
		<constructor-arg>
			<list>
				<bean
					class="org.springframework.security.core.authority.SimpleGrantedAuthority">
					<constructor-arg value="ROLE_ADMIN" />
				</bean>

			</list>
		</constructor-arg>
	</bean>

	<!-- Declare an audit logger -->
	<bean id="auditLogger"
		class="org.springframework.security.acls.domain.ConsoleAuditLogger" />

	<!-- http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/access/hierarchicalroles/RoleHierarchyImpl.html -->
	<bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_PROFESSOR
				ROLE_PROFESSOR > ROLE_STUDENT
				ROLE_STUDENT > ROLE_USER
			</value>
		</property>
	</bean>
	
		<!-- <bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
	</bean>-->
</beans>