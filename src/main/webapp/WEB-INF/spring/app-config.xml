<?xml version="1.0" encoding="UTF-8"?>
<!--

    This file is part of D.A.L.G.S.

    D.A.L.G.S is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    D.A.L.G.S is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with D.A.L.G.S.  If not, see <http://www.gnu.org/licenses/>.

-->

<!-- Hemos visto antes que es tremendamente fácil modificar la capa de servicio 
	para usar persistencia en base de datos. Esto es así porque está despegada 
	de la capa web. Ahora es el momento de despegar también la configuración 
	de la capa de servicio de la capa web. Eliminaremos la configuración de productManager 
	y la lista de productos del archivo de configuración 'app-config.xml' -->


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"

	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename" value="messages"/> </bean> -->

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="es.ucm.fdi.dalgs.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.academicTerm.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.activity.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.externalActivity.web" />	
	<context:component-scan base-package="es.ucm.fdi.dalgs.competence.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.course.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.degree.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.group.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.learningGoal.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.module.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.subject.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.topic.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.user.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.rest.web" />
	<context:component-scan base-package="es.ucm.fdi.dalgs.mailbox.web" />
	
	<context:component-scan base-package="es.ucm.fdi.storage.web" />
	
	<!-- <mvc:annotation-driven /> -->
	

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- Declares mvc:resources, to map “url path” to a physical file path location -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- max upload size in bytes -->
        <property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
         
        <!-- max size of file in memory (in bytes) -->
        <property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
	
	</bean>

	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<ref bean="academicTermFormatter" />
				<ref bean="activityFormatter" />
				<ref bean="competenceFormatter" />
				<ref bean="courseFormatter" />
				<ref bean="degreeFormatter" />
				<ref bean="subjectFormatter" />
				<ref bean="learningGoalStatusFormatter" />
				<ref bean="moduleFormatter" />
				<ref bean="topicFormatter" />
				<ref bean="learningGoalFormatter" />
				<ref bean="groupFormatter" />
				<ref bean="userFormatter" />
			</set>
		</property>
	</bean>
	<mvc:annotation-driven conversion-service="conversionService" />



	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en_UK" />
	</bean>
	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>


	<!--Configure to plugin JSON as request and response in method handler -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />

			</list>
		</property>
		<property name="requireSession" value="false"></property>
	</bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>

	<mvc:annotation-driven />



</beans>




